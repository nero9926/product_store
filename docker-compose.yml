version: "3.8"
services:
  backend:
    build:
      context: .
    container_name: "fastapi_app"
    restart: always
    volumes:
      - "./:/app"
    depends_on:
      - db
      - rabbitmq
    command: "uvicorn --host 0.0.0.0 --port=8000 app.main:app"
    ports:
      - 80:8000
    env_file:
      - .env

  queue:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "queue"
    command: "python -u consumer.py"
    restart: always
    depends_on:
      - db
      - rabbitmq

  notification_service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: "notifications"
    command: "python -u app/notification_service/main.py"
    restart: always
    depends_on:
      - db
      - rabbitmq

  db:
    image: postgres:12.9
    container_name: "db"
    command: -p 5432
    volumes:
      - postgres:/var/lib/postgresql/data/some_data
    env_file:
      - .env
    ports:
      - 5432:5432

  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: "rabbitmq"
    # hostname: "rabbitmq"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/mnesia
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq

volumes:
  postgres:
